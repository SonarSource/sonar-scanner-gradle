name: Build
on:
  push:
    branches:
      - master
      - branch-*
      - dogfood-*
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  qa17:
    strategy:
      fail-fast: false
      matrix:
        item:
          - gradle_version: "9.1.0"
          - gradle_version: "9.0.0"
          - gradle_version: "8.13"
          - gradle_version: "8.4"
          - gradle_version: "8.4"
            android_gradle_version: "8.3.0"
          - gradle_version: "8.3"
          - gradle_version: "8.0"
          - gradle_version: "7.6.4"
          - gradle_version: "7.5.1"
            android_gradle_version: "7.1.0"
          - gradle_version: "9.1.0"
            runner: "github-windows-latest-s"
          # BELOW ARE JAVA 11 CASES
          # - gradle_version: "7.5.1"
          #   android_gradle_version: "7.1.0"
          # - gradle_version: "6.8.3"
          #   android_gradle_version: "4.2.0"
          # - gradle_version: "5.6.4"
          #   android_gradle_version: "3.5.4"
    name: >
      QA Gradle ${{ matrix.item.gradle_version }}
      ${{ matrix.item.android_gradle_version && format(' Android {0}', matrix.item.android_gradle_version) || '' }}
      ${{ matrix.item.runner || '' }}
    runs-on: ${{ matrix.item.runner || 'github-ubuntu-latest-s' }}
    permissions:
      id-token: write
      contents: write
    env:
      BUILD_NUMBER: 6165
      GRADLE_VERSION: ${{ matrix.item.gradle_version }}
      ANDROID_GRADLE_VERSION: ${{ matrix.item.android_gradle_version || 'NOT_AVAILABLE' }}
    steps:
      - name: Configure Long Paths on Windows
        if: runner.os == 'Windows'
        run: |
          git config --global core.longpaths true
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
        with:
          version: 2025.7.12
      - name: Configure Maven
        uses: SonarSource/ci-github-actions/config-maven@v1
        with:
          artifactory-reader-role: private-reader
          working-directory: integrationTests
      - name: Run QA
        shell: bash # Set explicitly so Bash is used on Windows runners too.
        run: |
          source "./cirrus/set-version-from-build-number.sh"
          mvn -f property-dump-plugin/pom.xml --batch-mode install
          cd integrationTests
          mvn --errors --batch-mode --no-transfer-progress org.codehaus.mojo:versions-maven-plugin:2.7:set -DnewVersion="${NEW_VERSION}" -DgenerateBackupPoms=false
          mvn --errors --batch-mode --no-transfer-progress clean verify -Dgradle.version="${GRADLE_VERSION}" -DandroidGradle.version="${ANDROID_GRADLE_VERSION}"
