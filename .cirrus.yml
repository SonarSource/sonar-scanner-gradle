#
# ENV VARIABLES
#
env:
  ### Shared variables
  ARTIFACTORY_URL: VAULT[development/kv/data/repox data.url]
  ARTIFACTORY_PRIVATE_USERNAME: vault-${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-private-reader
  ARTIFACTORY_PRIVATE_PASSWORD: VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-private-reader access_token]
  ARTIFACTORY_DEPLOY_USERNAME: vault-${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-qa-deployer
  ARTIFACTORY_DEPLOY_PASSWORD: VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-qa-deployer access_token]
  ARTIFACTORY_ACCESS_TOKEN: VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-private-reader access_token]
  ARTIFACTORY_DEPLOY_REPO: sonarsource-public-qa
  DEVELOCITY_TOKEN: VAULT[development/kv/data/develocity data.token]
  DEVELOCITY_ACCESS_KEY: develocity.sonar.build=${DEVELOCITY_TOKEN}

  GITHUB_TOKEN: VAULT[development/github/token/licenses-ro token]

  ### Project variables
  DEPLOY_PULL_REQUEST: true
  CIRRUS_SHELL: bash

#
# RE-USABLE CONFIGS
#
container_definition_11: &CONTAINER_DEFINITION_11
  dockerfile: integrationTests/docker/Dockerfile_java11
  docker_arguments:
    CIRRUS_AWS_ACCOUNT: ${CIRRUS_AWS_ACCOUNT}
  cluster_name: ${CIRRUS_CLUSTER_NAME}
  builder_role: cirrus-builder
  builder_image: docker-builder-v*
  builder_instance_type: t2.small
  region: eu-central-1
  namespace: default

container_definition_17: &CONTAINER_DEFINITION_17
  dockerfile: integrationTests/docker/Dockerfile_java17
  docker_arguments:
    CIRRUS_AWS_ACCOUNT: ${CIRRUS_AWS_ACCOUNT}
  cluster_name: ${CIRRUS_CLUSTER_NAME}
  builder_role: cirrus-builder
  builder_image: docker-builder-v*
  builder_instance_type: t2.small
  region: eu-central-1
  namespace: default

setup_gradle_cache_template: &SETUP_GRADLE_CACHE
  gradle_cache:
    folder: .gradle/caches
  create_gradle_directory_script:
    - mkdir -p "${CIRRUS_WORKING_DIR}/.gradle"

only_sonarsource_qa: &ONLY_SONARSOURCE_QA
  only_if: $CIRRUS_USER_COLLABORATOR == 'true' && ($CIRRUS_PR != "" || $CIRRUS_BRANCH == "master" || $CIRRUS_BRANCH =~ "branch-.*" || $CIRRUS_BRANCH =~ "dogfood-on-.*")

log_develocity_url_script: &log_develocity_url_script |
  echo "Develocity URL: https://develocity.sonar.build/scans?search.publicHostnames=cirrus-ci-task-${CIRRUS_TASK_ID}"

build_task:
  eks_container:
    <<: *CONTAINER_DEFINITION_17
    cpu: 1.5
    memory: 4G
  env:
    SONAR_TOKEN: VAULT[development/kv/data/next data.token]
    SONAR_HOST_URL: VAULT[development/kv/data/next data.url]
    ORG_GRADLE_PROJECT_signingKey: VAULT[development/kv/data/sign data.key]
    ORG_GRADLE_PROJECT_signingPassword: VAULT[development/kv/data/sign data.passphrase]
    ORG_GRADLE_PROJECT_signingKeyId: VAULT[development/kv/data/sign data.key_id]
  gradle_cache:
    folder: ~/.gradle/caches
  maven_cache:
    folder: ${CIRRUS_WORKING_DIR}/.m2/repository
  script:
    - *log_develocity_url_script
    - source cirrus-env BUILD
    - source cirrus/define-gradle.sh
    - mvn -f property-dump-plugin/pom.xml -B install
    - regular_gradle_build_deploy_analyze -Dsonar.gradle.skipCompile=true
  on_failure:
    reports_artifacts:
      path: "**/build/reports/**/*"
    junit_artifacts:
      path: "**/test-results/**/*.xml"
      format: junit

promote_task:
  depends_on:
    - build
  <<: *ONLY_SONARSOURCE_QA
  eks_container:
    <<: *CONTAINER_DEFINITION_17
    cpu: 1
    memory: 2G
  env:
    ARTIFACTORY_PROMOTE_ACCESS_TOKEN: VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-promoter access_token]
    GITHUB_TOKEN: VAULT[development/github/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-promotion token]
  script: cirrus_promote_gradle

download_artifacts_task:
  depends_on:
    - promote
  eks_container:
    <<: *CONTAINER_DEFINITION_17
    cpu: 1.5
    memory: 4G
  gradle_cache:
    folder: ~/.gradle/caches
  maven_cache:
    folder: ${CIRRUS_WORKING_DIR}/.m2/repository
  script:
    - source cirrus-env QA
    - source set_gradle_build_version "${BUILD_NUMBER}"
    - ./cirrus/download-artifacts.sh "${BUILD_NUMBER}"
  always:
    build_artifacts:
      path: "build/**/*"

release_to_plugin_portal_task:
  only_if: $CIRRUS_PRERELEASE != "true" && $CIRRUS_RELEASE != ""
  stateful: 'true'
  depends_on:
    - promote
  eks_container:
    <<: *CONTAINER_DEFINITION_17
    cpu: 1.5
    memory: 4G
  gradle_cache:
    folder: ~/.gradle/caches
  env:
    ORG_GRADLE_PROJECT_signingKey: VAULT[development/kv/data/sign data.key]
    ORG_GRADLE_PROJECT_signingPassword: VAULT[development/kv/data/sign data.passphrase]
    ORG_GRADLE_PROJECT_signingKeyId: VAULT[development/kv/data/sign data.key_id]
    GRADLE_PUBLISH_KEY: VAULT[development/kv/data/gradle/publish data.key]
    GRADLE_PUBLISH_SECRET: VAULT[development/kv/data/gradle/publish data.secret]
    ARTIFACTORY_ACCESS_TOKEN: VAULT[development/artifactory/token/${CIRRUS_REPO_OWNER}-${CIRRUS_REPO_NAME}-promoter access_token]
  script: |
    source cirrus-env RELEASE
    ./gradlew \
      --info \
      --stacktrace \
      --console plain \
      "-Pgradle.publish.key=${GRADLE_PUBLISH_KEY}" \
      "-Pgradle.publish.secret=${GRADLE_PUBLISH_SECRET}" \
      "-DbuildNumber=${BUILD_NUMBER}" \
      publishPlugins
    jfrog rt bpr \
      --url "${ARTIFACTORY_URL}" \
      --access-token "${ARTIFACTORY_ACCESS_TOKEN}" \
      --status released \
      "${CIRRUS_REPO_NAME}" "${BUILD_NUMBER}" sonarsource-public-releases
