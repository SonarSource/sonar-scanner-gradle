buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
    }
    dependencies { classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:${version}") }
}

plugins {
    id 'org.jetbrains.kotlin.multiplatform' version 'JavaVersion.1_8.20'
    id 'application'
}

apply plugin: 'org.sonarqube'

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven { url 'https://maven.pkg.jetbrains.space/public/p/kotlinx-html/maven' }
}

kotlin {
    jvm {
        withJava()
        testRuns["test"].executionTask.configure {
            useJUnitPlatform()
        }
    }
    sourceSets {
        commonMain {

        }
        commonTest {
            dependencies {
                implementation kotlin('test')
            }
        }
        jvmMain {
            dependencies {
                implementation 'io.ktor:ktor-server-netty:2.0.2'
                implementation 'io.ktor:ktor-server-html-builder-jvm:2.0.2'
                implementation 'org.jetbrains.kotlinx:kotlinx-html-jvm:0.7.2'
            }
        }
        jvmTest {

        }
    }
}

application {
    mainClassName = 'org.example.application.ServerKt'
}

tasks.named('run') {
    dependsOn(tasks.named('jvmJar'))
    classpath(tasks.named('jvmJar'))
}
